//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.1434.
// 
namespace iPH.Commons.SessionService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="iPHSessionServicePortBinding", Namespace="http://server.session.iph/")]
    public partial class CollaborativeSessionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public CollaborativeSessionService() {
            this.Url = "http://localhost:8080/iPHSessionService/iPHSessionService";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:isConnected", RequestNamespace="http://server.session.iph/", ResponseNamespace="http://server.session.iph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isConnected() {
            object[] results = this.Invoke("isConnected", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisConnected(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isConnected", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndisConnected(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:addCollaborativeSession", RequestNamespace="http://server.session.iph/", ResponseNamespace="http://server.session.iph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addCollaborativeSession([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("addCollaborativeSession", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCollaborativeSession(string arg0, string arg1, int arg2, string arg3, string arg4, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCollaborativeSession", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndaddCollaborativeSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:removeCollaborativeSession", RequestNamespace="http://server.session.iph/", ResponseNamespace="http://server.session.iph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool removeCollaborativeSession([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            object[] results = this.Invoke("removeCollaborativeSession", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveCollaborativeSession(string arg0, string arg1, int arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeCollaborativeSession", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndremoveCollaborativeSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:clearRegion", RequestNamespace="http://server.session.iph/", ResponseNamespace="http://server.session.iph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearRegion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("clearRegion", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginclearRegion(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("clearRegion", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndclearRegion(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:clearAll", RequestNamespace="http://server.session.iph/", ResponseNamespace="http://server.session.iph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearAll() {
            this.Invoke("clearAll", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginclearAll(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("clearAll", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndclearAll(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCollaborativeSessionsRegion", RequestNamespace="http://server.session.iph/", ResponseNamespace="http://server.session.iph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public collaborativeSession[] getCollaborativeSessionsRegion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getCollaborativeSessionsRegion", new object[] {
                        arg0});
            return ((collaborativeSession[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCollaborativeSessionsRegion(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCollaborativeSessionsRegion", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public collaborativeSession[] EndgetCollaborativeSessionsRegion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((collaborativeSession[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://server.session.iph/")]
    public partial class collaborativeSession {
        
        private string ipField;
        
        private string ownerSessionField;
        
        private string passwordField;
        
        private int portField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ip {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ownerSession {
            get {
                return this.ownerSessionField;
            }
            set {
                this.ownerSessionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }

        public override string ToString()
        {
            return this.ownerSession + " at " + this.ip + ":" + this.port;
        }
    }
}
